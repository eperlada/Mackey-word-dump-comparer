a
above
acceptable
adds
all
always
an
and
answer
answers
any
apply
appropriate
are
argument
arguments
as
associated
avoid
b
be
behaves
between
binary
binsearch
blank
bool
booleans
both
bother
by
c
cadddr
caddr
cadr
car
case
cdr
clearly
code
collatz
compares
comparison
comparisons
compile
cond
conjecture
consider
consisting
copied
crash
cse
deducted
define
different
do
does
each
eaual
element
elements
ending
entered
equal
etc
even
every
exactly
exam
example
exist
expression
f
false
fields
figure
filter
find
first
float
floats
fold
foldl
following
for
found
from
fullowing
fun
function
functions
given
have
higher
hint
i
id
identity
if
ii
implies
in
inclusive
indentation
indicate
indicting
inner
int
integer
integers
interactions
into
ints
ip
is
it
key
keys
lambda
language
languages
larger
left
length
lengths
less
let
like
line
linear
lines
list
lists
map
may
messy
midterm
might
mm
mod
more
multiplication
must
n
no
node
none
not
null
number
numbers
ocaml
odd
of
on
once
one
only
operator
option
or
order
other
out
outer
output
pairwise
part
parts
per
point
pointer
points
polymorphic
positive
pre
preamble
predicate
previous
print
procedure
process
processor
product
programming
proper
pseudo
pt
q
quesions
question
rd
recursion
recursive
remainder
result
resulting
return
returns
rev
reverses
right
root
run
sample
satisfy
scheme
score
search
second
separaate
should
single
smaller
smalltalk
so
some
specific
st
starting
states
status
struct
structure
subtree
sum
sums
t
tail
takes
terminates
th
than
that
the
their
then
there
these
they
this
three
to
total
tree
true
twice
two
unreadable
up
use
used
uses
using
v
value
verbatim
wantkey
when
where
which
whose
will
winter
with
without
work
write
x
y
your